clear all
clear all hidden

addpath('json')

siteIds = [1 2];
maxIter = 10000; % increase this if you algorithm takes longer. It needs to be at least as large as the value set in the user input file
runId = 2; % this is only important on the portal - here runId has no specific meaning
registryLocation = 'http://localhost:5000';

%% preparation: create path strings etc.
numberOfSites = numel(siteIds);
userInputFileName = '..\..\create_user_input_file\UserInputFile.txt';
masterDir = '.\siteOutput\';
resultFolder = pwd();

sink = rmdir(masterDir, 's');

%% simulate DL
Abort = 0;
taskForSite = []; % mind this array is on the looping over the size of siteIds. Index corresponds with index of siteid
resultFile = '';
for ii = 1:maxIter
    display(['Iteration ' num2str(ii)])
    
    %% run master
    itMasterDir = fullfile(masterDir, num2str(ii));
    mkdir(itMasterDir);
    
    if length(taskForSite) > 0
        for siteLoop = 1:numberOfSites
            pht_getTaskResult(registryLocation, num2str(siteIds(siteLoop)), taskForSite(siteLoop), itMasterDir);
        end
    end
    
    display('Run code on master')
    mainMaster(num2str(runId),num2str(ii),itMasterDir,itMasterDir,masterDir,num2str(Abort),num2str(siteIds),userInputFileName,fullfile(masterDir, 'log.txt'));
    
    %% check if result file is generated by master. If yes, stop.
    if exist(fullfile(itMasterDir,'Result.txt'),'file') == 2
        resultFile = fullfile(itMasterDir,'Result.txt');
        display('Result file found. Simulation ends.');
        break
    end
    
    %% run sites
    for siteLoop = 1:numberOfSites
        inputSiteFile = fullfile(itMasterDir, ['input_' num2str(siteIds(siteLoop)) '.txt']);
        output = pht_postNewSiteTask(registryLocation, inputSiteFile, 'jvsoest/svm_site', runId, num2str(siteIds(siteLoop)));
        outputStruct = loadjson(output);
        if (outputStruct.success)
            taskForSite(siteLoop) = outputStruct.taskId;
        else
            warning('posting site task to registry resulted in an error')
        end
        
    end
    
end

if exist(resultFile,'file') == 2
    % label result file with time and date and copy result file to
    % resultPath
    curTime = datestr(now);
    curTime = strrep(curTime,':','');
    curTime = strrep(curTime,'-','');
    curTime = strrep(curTime,' ','_');
    copyfile(resultFile,fullfile(resultFolder,['Result' '_' curTime '.txt']));
else
    error('Simulation ended without a result file being generated.')
end
